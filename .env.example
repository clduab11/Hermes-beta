# ============================
# HERMES Environment Template
# ============================
# Copy to .env and fill in as needed. Do NOT commit your .env.
# Use a secret manager in production (e.g., Google Secret Manager, AWS Secrets Manager).

# Core LLM (Required for LLM responses)
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4

# Server
API_HOST=0.0.0.0
API_PORT=8000
DEBUG=true

# STT (Whisper)
WHISPER_MODEL=base
WHISPER_DEVICE=cpu

# TTS (Kokoro or mock server)
KOKORO_API_URL=http://localhost:8001
KOKORO_VOICE=af_sarah

# Audio/latency
SAMPLE_RATE=16000
CHUNK_SIZE=1024
MAX_AUDIO_LENGTH_SECONDS=30
# Repo docs use RESPONSE_TIMEOUT_SECONDS for config; leave here for consistency
RESPONSE_TIMEOUT_SECONDS=0.1

# Legal/compliance
CONFIDENCE_THRESHOLD=0.85
ENABLE_DISCLAIMERS=true
AUDIT_LOGGING=true

# Authentication (JWT). Paste PEM on one line with \n or load from file at runtime
# JWT_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----
# JWT_PUBLIC_KEY=-----BEGIN PUBLIC KEY-----\n...\n-----END PUBLIC KEY-----

# Database (set when you want DB-backed features; e.g., Supabase Postgres URL)
# Example: postgres://USER:PASSWORD@HOST:6543/postgres
DATABASE_URL=

# Redis cache
# Local:  redis://localhost:6379
# Docker: redis://redis:6379   (service name "redis")
REDIS_URL=redis://localhost:6379

# ======================
# MCP / Integrations
# ======================

# GitHub MCP (repo automation/docs). Use least-privilege token scoped to this repo
GITHUB_TOKEN=

# Supabase MCP (only if using Supabase MCP server or REST)
# SUPABASE_URL=https://YOUR-PROJECT.supabase.co
# SUPABASE_ANON_KEY=
# SUPABASE_SERVICE_ROLE_KEY=

# Mem0 MCP (enable for durable contextual memory via hosted API)
# Required only if using hosted Mem0 API
MEM0_API_KEY=

# Clio (future: enable direct actions via OAuth)
# CLIO_CLIENT_ID=
# CLIO_CLIENT_SECRET=
# CLIO_REDIRECT_URI=https://your-domain.com/oauth/clio/callback

# Zapier
# For webhook-only usage, set the webhook URLs you want HERMES to call
ZAPIER_WEBHOOK_CLIENT_INTAKE=
ZAPIER_WEBHOOK_MATTER_UPDATE=
ZAPIER_WEBHOOK_APPOINTMENT_SCHEDULED=
# If/when HERMES needs Zapier API calls beyond webhooks, set:
# ZAPIER_API_KEY=

# ======================
# Billing / Payments
# ======================

# Stripe (Stripe Link is part of Stripe; no separate key). Enable only if needed
# STRIPE_API_KEY=
# STRIPE_WEBHOOK_SECRET=
# STRIPE_PRICE_PRO=
# STRIPE_PRICE_ENTERPRISE=
# STRIPE_OVERAGE_PRICE=

# Plaid Link (NOT implemented by default; set only if you add integration)
# PLAID_CLIENT_ID=
# PLAID_SECRET=
# PLAID_ENV=sandbox
# PLAID_WEBHOOK_URL=